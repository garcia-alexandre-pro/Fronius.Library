//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fronius.Library.Services
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LibraryEntities : DbContext
    {
        public LibraryEntities()
            : base("name=LibraryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Author> Authors { get; set; }
        public virtual DbSet<AuthorByBook> AuthorByBooks { get; set; }
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<Genre> Genres { get; set; }
        public virtual DbSet<GenreByBook> GenreByBooks { get; set; }
        public virtual DbSet<Illustrator> Illustrators { get; set; }
        public virtual DbSet<Individual> Individuals { get; set; }
        public virtual DbSet<AuthorList> AuthorLists { get; set; }
        public virtual DbSet<IllustratorList> IllustratorLists { get; set; }
    
        public virtual ObjectResult<GetBooks_Result> GetBooks(Nullable<int> authorId, string orderingColumn, string orderingDirection)
        {
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("authorId", authorId) :
                new ObjectParameter("authorId", typeof(int));
    
            var orderingColumnParameter = orderingColumn != null ?
                new ObjectParameter("orderingColumn", orderingColumn) :
                new ObjectParameter("orderingColumn", typeof(string));
    
            var orderingDirectionParameter = orderingDirection != null ?
                new ObjectParameter("orderingDirection", orderingDirection) :
                new ObjectParameter("orderingDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBooks_Result>("GetBooks", authorIdParameter, orderingColumnParameter, orderingDirectionParameter);
        }
    }
}
